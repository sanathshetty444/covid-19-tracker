{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Cards.jsx","App.js","index.js","App.module.css","images/image.png","components/Chart/Chart.module.css"],"names":["module","exports","url","fetchData","country","a","changeableurl","axios","get","data","modifiedData","confirmed","recovered","deaths","lastUpdate","fetchDailyData","console","log","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","dailydata","fetchapi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barchart","value","options","legend","display","title","text","className","styles","container","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","Cards","undefined","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","seperator","Date","toDateString","App","state","fetcheddata","setState","this","src","cimg","image","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06609f45.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2DBX-\",\"card\":\"Cards_card__3aQPP\",\"infected\":\"Cards_infected__3ti62\",\"recovered\":\"Cards_recovered__ud-ca\",\"deaths\":\"Cards_deaths__1jVJ7\"};","import axios from 'axios';\r\nconst url ='http://covid19.mathdro.id/api';\r\nexport const fetchData= async (country)=>{\r\n    let changeableurl=url;\r\n    if(country){\r\n        changeableurl=`${url}/countries/${country}`\r\n    }\r\n    try {\r\n        const {data}=await axios.get(changeableurl);\r\n        const modifiedData={\r\n            confirmed:data.confirmed,\r\n            recovered:data.recovered,\r\n            deaths:data.deaths,\r\n            lastUpdate:data.lastUpdate\r\n        }\r\n        // return response;\r\n        return modifiedData;\r\n        // console.log(response);\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\nexport const fetchDailyData=async function(){\r\n    try {\r\n        const {data}=await axios.get(`${url}/daily`);\r\n        console.log(\">>>>>??????\",data)\r\n        const modifiedData=data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate,\r\n        }));\r\n        return modifiedData;\r\n        \r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\nexport const fetchCountries=async function(){\r\n    try {\r\n        const {data:{countries}}=await axios.get(`${url}/countries`)\r\n        return countries.map((country)=>country.name);\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\n\r\n","import React,{useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api'\r\nimport {Line,Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css'\r\n\r\n\r\nconst Chart=function({data,country}){\r\n\r\n    const [dailyData,setDailyData]=useState([]);\r\n\r\n    useEffect(function(){\r\n        const fetchapi=async function(){\r\n            const dailydata=await fetchDailyData();\r\n            setDailyData(dailydata);\r\n        }\r\n        // console.log(dailyData);\r\n        fetchapi();\r\n    },[]);\r\n     \r\n    const lineChart=(\r\n        dailyData.length ? (<Line data={{\r\n            // map is used in labels\r\n            labels:dailyData.map(({date})=>date),\r\n            datasets:[{\r\n                data:dailyData.map(({confirmed})=>confirmed),\r\n                label:'Infected',\r\n                borderColor:'#3333ff',\r\n                fill:true,\r\n            },{\r\n                data:dailyData.map(({deaths})=>deaths),\r\n                label:'Deaths',\r\n                borderColor:'red',\r\n                backgroundColor:'rgba(255,0,0,0.5)',\r\n\r\n                fill:true,\r\n            }],\r\n        }} />) :null\r\n    )\r\n    const barchart=(\r\n        data.confirmed?(\r\n            \r\n            <Bar\r\n            data={{\r\n                labels:['Infected','Recovered','Deaths'],\r\n                datasets:[{\r\n                    label:'People',\r\n                    backgroundColor:[\r\n                    'rgba(0,0,255,0.5)',\r\n                    'rgba(0,255,0,0.5)',\r\n                    'rgba(255,0,0,0.5)',\r\n                ],\r\n                    data:[data.confirmed.value,data.recovered.value,data.deaths.value]\r\n                }]\r\n                \r\n            }}\r\n            options={{\r\n                legend:{display:false},\r\n                title:{display:true,text:`Current State In ${country}`}\r\n            }}/>\r\n\r\n           \r\n        ):null\r\n\r\n    )\r\n    return(\r\n        <div className={styles.container}>\r\n            {country?barchart:lineChart}\r\n        </div>\r\n    )\r\n}\r\nexport default Chart;","import React,{useState,useEffect} from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api'\r\nconst CountryPicker=function({handleCountryChange}){\r\n   \r\n        const [fetchedCountries,setFetchedCountries]=useState([])\r\n        useEffect(()=>{\r\n            const fetchapi=async()=>{\r\n                setFetchedCountries(await fetchCountries());\r\n            }\r\n            fetchapi();\r\n        },[setFetchedCountries])\r\n        // this will makes sure that useEffect is called only when the array 'fetchedCountires' gets updated else it would call it seemlessly\r\n\r\n    \r\n    return(\r\n        <div>\r\n            <FormControl className={styles.FormControl}>\r\n                <NativeSelect defaultValue='' onChange={(e)=>handleCountryChange(e.target.value)}>\r\n                    <option value=\"\">Global\r\n                    </option>\r\n                    {fetchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n                </NativeSelect>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\nexport default CountryPicker;","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup'\r\n// for having multiple classes inside grid component\r\nimport cx from 'classnames'\r\n\r\n\r\n\r\nconst Cards=function({data:{confirmed,recovered,deaths,lastUpdate}}){\r\n    if(confirmed==undefined){\r\n        return \"loading\";\r\n    }\r\n    \r\n    \r\n    \r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify='center'>\r\n                <Grid item component={Card}\r\n                  xs={12}\r\n                  md={3}\r\n                  className={cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            Infected\r\n\r\n                        </Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp start ={0} \r\n                            end={confirmed.value} duration={2.5} seperator=','>\r\n                            \r\n                            </CountUp>\r\n\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of Covid-19\r\n                        </Typography>\r\n\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n                <Grid item component={Card} xs={12}\r\n                  md={3}\r\n                  className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            Recovered\r\n\r\n                        </Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp start ={0} \r\n                            end={recovered.value} duration={2.5} seperator=','>\r\n                            \r\n                            </CountUp>\r\n\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>\r\n                        {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries of Covid-19\r\n                        </Typography>\r\n\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n                <Grid item component={Card}\r\n                    xs={12}\r\n                    md={3}\r\n                    className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            Deaths\r\n                        </Typography>\r\n\r\n                        <Typography variant='h5'>\r\n                            <CountUp start ={0} \r\n                            end={deaths.value} duration={2.5} seperator=','>\r\n                            \r\n                            </CountUp>\r\n\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>\r\n                        {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">Number of deaths due to Covid-19\r\n                        </Typography>\r\n\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\nexport default Cards;","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport {fetchData} from './api';\r\n// import Cards from './components/Cards/Cards';\r\nimport styles from './App.module.css'\r\nimport cimg from './images/image.png'\r\nimport {Cards,Chart,CountryPicker} from './components'\r\nclass App extends React.Component{\r\n    state={\r\n        data:{},\r\n        country:'',\r\n    }\r\n\r\n\r\n\r\n    async componentDidMount(){\r\n        const fetcheddata=await fetchData();\r\n        // console.log(data);\r\n        this.setState({data:fetcheddata})\r\n    }\r\n\r\n\r\n    handleCountryChange=async(country)=>{\r\n        const fetcheddata=await fetchData(country);\r\n        this.setState({data:fetcheddata,country:country})\r\n    }\r\n\r\n\r\n    render(){\r\n        const {data,country} =this.state;\r\n        return(\r\n           <div className={styles.container}>\r\n               <img src={cimg} className={styles.image} alt='Covid-19'/>\r\n               <Cards data= {data}/>\r\n               <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n               <Chart data={data} country={country}/>\r\n           </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nReactDOM.render(<App />,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1S3gR\",\"image\":\"App_image__EsWXG\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__K4oQI\",\"image\":\"Chart_image__3gpDh\"};"],"sourceRoot":""}